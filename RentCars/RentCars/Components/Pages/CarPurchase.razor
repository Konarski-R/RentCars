@page "/carpurchase/{CarId}"
@inject NavigationManager NavigationManager
@inject DataService DataService
@rendermode InteractiveServer

<PageTitle>Additional Packs</PageTitle>

<style>
    body {
        background-image: url('https://www.shutterstock.com/image-photo/blurred-abstract-dealership-store-defocused-600nw-1486381349.jpg');
        background-size: cover;
        background-repeat: no-repeat;
        background-attachment: fixed;
        font-family: Arial, sans-serif;
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        margin: 0;
    }

    .main-container {
        background-color: rgba(255, 255, 255, 0.8);
        border-radius: 10px;
        max-width: 800px;
        padding: 20px;
        text-align: center;
    }

    .plans, .additions {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .plan-card, .extra-card {
        background-color: white;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin: 10px;
        padding: 10px;
        width: 200px;
        text-align: center;
    }

        .extra-card img {
            max-width: 100%;
            height: auto;
        }

    button {
        margin: 10px;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        background-color: #007bff;
        color: white;
        cursor: pointer;
    }

        button:hover {
            background-color: #0056b3;
        }

    .checkout {
        margin-top: 20px;
        width: 100%;
    }

    .price-detail {
        opacity: 0.5;
    }

    .page-title {
        text-align: center;
        margin-bottom: 20px;
    }

    .additions {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 10px;
    }
</style>

<div class="main-container">
    <h1 class="page-title">Total Price: @TotalPrice.ToString("F2") CHF</h1>

    @if (!DaysInputted)
    {
        <h2>How many days do you need this car for?</h2>
        <input type="number" value="@NumOfDays" @oninput="DaysAmountChanged" />

        <button @onclick="ConfirmDays">Click here to confirm your input.</button>

        @if (DaysError)
        {
            <p>Please input a positive number of days.</p>
        }
    }
    else
    {
        <div class="plans">
            <div class="plan-card">
                <div>Basic - 0 CHF</div>
                @if (BasicSelected)
                {
                    <button disabled>Selected</button>
                }
                else
                {
                    <button @onclick="AddBasic">Select</button>
                }
            </div>
            <div class="plan-card">
                <div>Premium - 50 CHF</div>
                @if (PremiumSelected)
                {
                    <button disabled>Selected</button>
                }
                else
                {
                    <button @onclick="AddPremium">Select</button>
                }
            </div>
        </div>

        @if (PlanNotChosen)
        {
            <div>Please choose your plan</div>
        }

        <h3>Extras</h3>
        <div class="additions">
            @foreach (Addition a in AllAdditions)
            {
                <div class="extra-card">
                    <p>@a.Name</p>
                    <img src="@a.ImagePath" alt="@a.Name" />
                    <p>@a.Description</p>
                    <p>@a.Price.ToString("F2")</p>
                    @if (a.IsSelected)
                    {
                        <button @onclick="(e => RemoveFromExtras(a))">Remove</button>
                    }
                    else
                    {
                        <button @onclick="(e => AddToExtras(a))">Add</button>
                    }
                </div>
            }
        </div>

        <button class="checkout" @onclick="FinalCheckout">Check out</button>
    }

    <button @onclick="BackToCarShow">Return To all cars</button>
</div>

@code {
    [Parameter]
    public string CarId { get; set; }

    static CarDBUsage db = new();

    private Car car = new();

    public double TotalPrice = 0.0;
    public int NumOfDays = 0;

    public bool DaysInputted = false;
    public bool DaysError = false;

    public bool BasicSelected = false;
    public bool PremiumSelected = false;
    public bool PlanNotChosen = false;

    List<Addition> AllAdditions = new List<Addition>{
        new Addition("Name", "Desc", "link", 250.50),
        new Addition("Extra1", "Extra Description 1", "link1", 30.0),
        new Addition("Extra2", "Extra Description 2", "link2", 40.0),
        new Addition("Extra3", "Extra Description 3", "link3", 50.0),
        new Addition("Extra4", "Extra Description 4", "link4", 60.0),
        new Addition("Extra5", "Extra Description 5", "link5", 70.0),
    };

    protected override void OnInitialized()
    {
        if (int.TryParse(CarId, out int carId))
        {
            car = db.SelectCarFromId(carId);
            TotalPrice = car.CarPrice;
        }
    }

    public void DaysAmountChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int days))
        {
            NumOfDays = days;

            if (days > 0 && days < 7)
            {
                TotalPrice = Math.Ceiling((car.CarPrice * days) * 20) / 20;
            }
            else if (days >= 7 && days < 30)
            {
                TotalPrice = Math.Ceiling((car.CarPrice * days) * 20) / 20;
                double Percentage = TotalPrice / 100.0 * 2.5;
                TotalPrice -= Percentage;
            }
            else if(days >= 30)
            {
                TotalPrice = Math.Ceiling((car.CarPrice * days) * 20) / 20;
                double Percentage = TotalPrice / 100.0 * 5.0;
                TotalPrice -= Percentage;
            }
            else
            {
                TotalPrice = car.CarPrice;
            }
        }
    }

    public void ConfirmDays()
    {
        if (NumOfDays > 0)
        {
            DaysInputted = true;
        }
        else
        {
            DaysError = true;
        }
    }

    public void AddBasic()
    {
        PlanNotChosen = false;
        if (PremiumSelected)
            TotalPrice -= 50;
        PremiumSelected = false;
        BasicSelected = true;
        DataService.Plan = "Basic";
    }

    public void AddPremium()
    {
        PlanNotChosen = false;
        BasicSelected = false;
        PremiumSelected = true;
        TotalPrice += 50;
        DataService.Plan = "Premium";
    }

    public void AddToExtras(Addition a)
    {
        TotalPrice += a.Price;
        a.IsSelected = true;
        DataService.Additions.Add(a);
    }

    public void RemoveFromExtras(Addition a)
    {
        TotalPrice -= a.Price;
        a.IsSelected = false;
        DataService.Additions = DataService.Additions.Where(x => x.Name != a.Name).ToList();
    }

    public void FinalCheckout()
    {
        if (DataService.Plan is null)
        {
            PlanNotChosen = true;
        }
        else
        {
            DataService.Days = NumOfDays;
            NavigationManager.NavigateTo($"/checkout/{CarId}");
        }
    }

    public void BackToCarShow()
    {
        DataService.ClearRentData();
        NavigationManager.NavigateTo("/carshow");
    }
}
