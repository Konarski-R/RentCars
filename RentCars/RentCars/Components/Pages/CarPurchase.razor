@page "/carpurchase/{CarId}"
@inject NavigationManager NavigationManager
@inject DataService SharedUser
@rendermode InteractiveServer

<PageTitle>Additional Packs</PageTitle>

 <div class="main-container">
    <h1>Total Price: @TotalPrice.ToString("F2")  CHF</h1>

    @if (!DaysInputted)
    {
        <h2>How many days do you need this car for?</h2>
        <input type="number" value="@NumOfDays" @oninput="DaysAmountChanged" />

        <button @onclick="ConfirmDays">Click here to confirm your input.</button>

        @if (DaysError)
        {
            <p>Please input a positive number of days.</p>
        }
    }
    else
    {
        @*
      <div class="plans">
        <div class="plan-card">
            <div>Basic - 0 CHF</div>
            <button @onclick="() => ChoosePlan(0)">@(basicChosen ? "Chosen" : "Choose")</button>
        </div>
        <div class="plan-card">
            <div>Premium - 50 CHF</div>
            <button @onclick="() => ChoosePlan(50)">@(premiumChosen ? "Chosen" : "Choose")</button>
        </div>
    </div>

    <div class="protections">
        <h3>Protections</h3>
        @foreach (var protection in protections)
        {
            <div class="extra-card">
                <div>@protection.Name - @protection.Price CHF</div>
                <button @onclick="() => ToggleExtra(protection)">@(protection.IsAdded ? "Added" : "Add")</button>
            </div>
        }
    </div>

    <div class="extras">
        <h3>Extras</h3>
        @foreach (var extra in extras)
        {
            <div class="extra-card">
                <div>@extra.Name - @extra.Price CHF</div>
                <button @onclick="() => ToggleExtra(extra)">@(extra.IsAdded ? "Added" : "Add")</button>
            </div>
        }
    </div>
    *@
        <button class="checkout">Check out</button>
    }
</div>

    
    






@code {
    [Parameter]
    public string CarId { get; set; }

    static CarDBUsage db = new();

    private Car car;

    public double TotalPrice = 0.0;
    public int NumOfDays = 0;

    public bool DaysInputted = false;
    public bool DaysError = false;

    protected override void OnInitialized()
    {
        if (int.TryParse(CarId, out int carId))
        {
            car = db.SelectCarFromId(carId);
            TotalPrice = car.CarPrice;
        }
    }

    public void DaysAmountChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int days))
        {
            NumOfDays = days;

            if(days > 0)
            {
                TotalPrice = Math.Ceiling((car.CarPrice * days) * 20) / 20;
            }
            else
            {
                TotalPrice = car.CarPrice;
            }
        }
    }

    public void ConfirmDays()
    {
        if(NumOfDays > 0)
        {
            DaysInputted = true;
        }
        else
        {
            DaysError = true;
        }
    }
}
